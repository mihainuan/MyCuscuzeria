// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCuscuzeria.Infrastructure.Persistence.EF;

namespace MyCuscuzeria.Infrastructure.Migrations
{
    [DbContext(typeof(MyCuscuzeriaContext))]
    [Migration("20190415202434_1st_Solutis")]
    partial class _1st_Solutis
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Accompaniment", b =>
                {
                    b.Property<int>("AccompanimentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccompanimentName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("CuscuzId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("GuId");

                    b.HasKey("AccompanimentId");

                    b.HasIndex("CuscuzId");

                    b.ToTable("Accompaniments");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Beverage", b =>
                {
                    b.Property<int>("BeverageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BeverageName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("GuId");

                    b.Property<int>("OrderId");

                    b.HasKey("BeverageId");

                    b.HasIndex("OrderId");

                    b.ToTable("Beverages");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Cuscuz", b =>
                {
                    b.Property<int>("CuscuzId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccompanimentId");

                    b.Property<string>("CuscuzName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("GuId");

                    b.Property<int>("OrderId");

                    b.Property<int>("TypeId");

                    b.HasKey("CuscuzId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TypeId")
                        .IsUnique();

                    b.ToTable("Cuscuz");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Cuscuzeiro", b =>
                {
                    b.Property<int>("CuscuzeiroId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnName("YearsOfExperience");

                    b.Property<string>("CuscuzeiroName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<Guid>("GuId");

                    b.Property<int>("OrderId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<string>("UrlImg")
                        .HasMaxLength(500);

                    b.HasKey("CuscuzeiroId");

                    b.ToTable("Cuscuzeiros");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("DrinkName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<Guid>("GuId");

                    b.Property<int>("OrderId");

                    b.HasKey("DrinkId");

                    b.HasIndex("OrderId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BeverageId");

                    b.Property<int>("CuscuzId");

                    b.Property<int>("CuscuzeiroId");

                    b.Property<bool>("Delivered");

                    b.Property<int>("DrinkId");

                    b.Property<Guid>("GuId");

                    b.Property<DateTime>("OrderCreation");

                    b.Property<int>("OrderStatus");

                    b.Property<decimal>("OrderTotal");

                    b.Property<int>("PromoId");

                    b.Property<int>("UserId");

                    b.HasKey("OrderId");

                    b.HasIndex("CuscuzeiroId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Promo", b =>
                {
                    b.Property<int>("PromoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime?>("EndsAt");

                    b.Property<Guid>("GuId");

                    b.Property<int>("OrderId");

                    b.Property<string>("PromoTitle")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("StartsAt");

                    b.HasKey("PromoId");

                    b.HasIndex("OrderId");

                    b.ToTable("Promos");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("GuId");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("TypeId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("GuId");

                    b.Property<DateTime?>("LastOrder");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("UrlImg")
                        .HasMaxLength(500);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(150);

                    b.HasKey("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Accompaniment", b =>
                {
                    b.HasOne("MyCuscuzeria.Domain.Entities.Cuscuz", "Cuscuz")
                        .WithMany("Accompaniments")
                        .HasForeignKey("CuscuzId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Beverage", b =>
                {
                    b.HasOne("MyCuscuzeria.Domain.Entities.Order", "Order")
                        .WithMany("Beverages")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Cuscuz", b =>
                {
                    b.HasOne("MyCuscuzeria.Domain.Entities.Order", "Order")
                        .WithMany("Cuscuzes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyCuscuzeria.Domain.Entities.Type", "Type")
                        .WithOne("Cuscuz")
                        .HasForeignKey("MyCuscuzeria.Domain.Entities.Cuscuz", "TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Drink", b =>
                {
                    b.HasOne("MyCuscuzeria.Domain.Entities.Order", "Order")
                        .WithMany("Drinks")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Order", b =>
                {
                    b.HasOne("MyCuscuzeria.Domain.Entities.Cuscuzeiro", "Cuscuzeiro")
                        .WithOne("Order")
                        .HasForeignKey("MyCuscuzeria.Domain.Entities.Order", "CuscuzeiroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyCuscuzeria.Domain.Entities.User", "User")
                        .WithOne("Order")
                        .HasForeignKey("MyCuscuzeria.Domain.Entities.Order", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.Promo", b =>
                {
                    b.HasOne("MyCuscuzeria.Domain.Entities.Order", "Order")
                        .WithMany("Promo")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyCuscuzeria.Domain.Entities.User", b =>
                {
                    b.OwnsOne("MyCuscuzeria.Domain.ValueObjects.FullName", "Fullname", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasMaxLength(50);

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnName("LastName")
                                .HasMaxLength(50);

                            b1.ToTable("Clients");

                            b1.HasOne("MyCuscuzeria.Domain.Entities.User")
                                .WithOne("Fullname")
                                .HasForeignKey("MyCuscuzeria.Domain.ValueObjects.FullName", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
